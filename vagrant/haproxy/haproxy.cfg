global
  log /dev/log	local0
  log /dev/log	local1 notice
  chroot /var/lib/haproxy
  stats socket /run/haproxy/admin.sock mode 660 level admin
  stats timeout 30s
  user haproxy
  group haproxy
  daemon

  # Default SSL material locations
  ca-base /etc/ssl/certs
  crt-base /etc/ssl/private

  # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
  ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
  ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
 ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
  log	global
  mode	http
  option	httplog
  option	dontlognull
  timeout connect 5000
  timeout client  50000
  timeout server  50000
  errorfile 400 /etc/haproxy/errors/400.http
  errorfile 403 /etc/haproxy/errors/403.http
  errorfile 408 /etc/haproxy/errors/408.http
  errorfile 500 /etc/haproxy/errors/500.http
  errorfile 502 /etc/haproxy/errors/502.http
  errorfile 503 /etc/haproxy/errors/503.http
  errorfile 504 /etc/haproxy/errors/504.http

frontend frontend-6443
  bind *:6443
  mode tcp
  option tcplog
  default_backend control-plane

backend control-plane
  mode tcp
  option httpchk GET /healthz
  default-server check check-ssl verify none resolve-prefer ipv4
  server cp1 cp1.lab.hvlck.xyz:6443
  server cp2 cp2.lab.hvlck.xyz:6443
  server cp3 cp3.lab.hvlck.xyz:6443

frontend frontend-80
  bind *:80
  mode http
  option httplog
  use_backend stats if { req.hdr(host) -i proxy1.lab.hvlck.xyz }
  default_backend default-80

backend default-80
  mode http
  option tcp-check
  default-server send-proxy-v2 check resolve-prefer ipv4
  server w1 w1.lab.hvlck.xyz:80
  server w2 w2.lab.hvlck.xyz:80

frontend frontend-443
  bind *:443
  mode tcp
  option tcplog
  default_backend default-443

backend default-443
  mode tcp
  option tcp-check
  default-server send-proxy-v2 check resolve-prefer ipv4
  server w1 w1.lab.hvlck.xyz:443
  server w2 w2.lab.hvlck.xyz:443

backend stats
  mode http
  stats enable
  stats show-desc Kubernetes API/Ingress proxy stats
  stats uri /
  stats refresh 10s
